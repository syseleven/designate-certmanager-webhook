apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "designate-certmanager-webhook.fullname" . }}
  labels:
    app: {{ include "designate-certmanager-webhook.name" . }}
    chart: {{ include "designate-certmanager-webhook.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "designate-certmanager-webhook.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "designate-certmanager-webhook.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "designate-certmanager-webhook.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-tls-secret
          image: "{{ .Values.alpine.image.repository }}:{{ .Values.alpine.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: certs
            mountPath: /tls
            readOnly: true
          command:
            - /bin/sh
          args:
            - -c
            - "while [ ! -f /tls/tls.key ]; do sleep 5; done"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        - name: add-apiservice
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: apiservice-config
              mountPath: /config
              readOnly: true
          command:
            - kubectl
          args:
            - apply
            - -f
            - /config/apiservice.yaml
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --tls-cert-file=/tls/tls.crt
            - --tls-private-key-file=/tls/tls.key
            - --secure-port=8443
          envFrom:
            - secretRef:
                name: {{ .Values.credentialsSecret }}
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          {{- toYaml .Values.probes | nindent 10 }}
          volumeMounts:
            - name: certs
              mountPath: /tls
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: apiservice-config
          configMap:
            name: {{ include "designate-certmanager-webhook.fullname" . }}-apiservice
        - name: certs
          secret:
            optional: true
            secretName: {{ include "designate-certmanager-webhook.servingCertificate" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
